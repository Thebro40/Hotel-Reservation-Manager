@model RoomDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div class="row">
    <div class="col-md-4">
        <form>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                @Html.DisplayNameFor(model => model.Capacity)
                @Html.DisplayFor(model => model.Capacity)
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.IsAvailable)
                @Html.DisplayFor(model => model.IsAvailable)
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.Number)
                @Html.DisplayFor(model => model.Number)
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.PricePerBedAdult)
                @Html.DisplayFor(model => model.PricePerBedAdult)
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.PricePerBedChild)
                @Html.DisplayFor(model => model.PricePerBedChild)
            </div>
            <div class="form-group">
                @Html.DisplayNameFor(model => model.RoomType)
                @Html.DisplayFor(model => model.RoomType)
            </div>
            <div class="form-group">
                @*@if (this.User.IsInRole("Admin"))*@
                <a asp-action="Edit" asp-route-id="@Model.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                <a asp-action="Delete" asp-route-id="@Model.Id"><i class="fa-solid fa-trash"></i></a>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}